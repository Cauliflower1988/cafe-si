<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:int-stream="http://www.springframework.org/schema/integration/stream"
	xmlns:int-xml="http://www.springframework.org/schema/integration/xml"
	xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
	xmlns:amq="http://activemq.apache.org/schema/core"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration
		http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/stream
		http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd 
		http://www.springframework.org/schema/integration/xml
		http://www.springframework.org/schema/integration/xml/spring-integration-xml.xsd 
		http://www.springframework.org/schema/integration/jms 
		http://www.springframework.org/schema/integration/jms/spring-integration-jms.xsd 
		http://activemq.apache.org/schema/core 
		http://activemq.apache.org/schema/core/activemq-core-5.4.2.xsd">


	<amq:broker brokerName="cafe-broker">
		<amq:transportConnectors>
			<amq:transportConnector name="openwire" uri="tcp://localhost:61616"/>
		</amq:transportConnectors>
		<amq:plugins>
			<amq:statisticsBrokerPlugin/>
		</amq:plugins>
	</amq:broker>

	<!-- Set up the connection factory. You must name the bean "connectionFactory" for the JMS-backed
	channels to automatically find it. Otherwise, you must specify the connection when you declare the
	channel -->
	<beans:bean id="connectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
		<beans:property name="targetConnectionFactory">
			<beans:bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<beans:property name="brokerURL" value="tcp://localhost:61616"/>
			</beans:bean>
		</beans:property>
		<beans:property name="sessionCacheSize" value="10"/>
		<beans:property name="cacheProducers" value="false"/>
	</beans:bean>

	<int-jms:channel id="XMLOrders" queue-name="org.springframework.integration.samples.cafe.xmlorders" />

	<beans:bean id="jaxb-unmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
		<beans:property name="contextPath" value="org.springframework.integration.samples.cafe" />
	</beans:bean>
	
	<int-xml:unmarshalling-transformer unmarshaller="jaxb-unmarshaller" input-channel="XMLOrders" output-channel="orders" />
	
	<int:channel id="orders">
		<int:interceptors>
			<int:wire-tap channel="logger"/>
		</int:interceptors>
	</int:channel>

	<int:logging-channel-adapter id="logger" level="INFO"/>

	<!-- each order has a collection of order items that is split apart to be processed -->
	<int:splitter input-channel="orders" expression="payload.items" output-channel="drinks"/>
	

	<!-- The router sends different drink orders on different paths -->
	<int:channel id="drinks"/>
	<int:router input-channel="drinks"  expression="payload.iced ? 'coldDrinks' : 'hotDrinks'"/>

	<!-- individual order items are processed by the barista -->
	<int:channel id="coldDrinks">
		<int:queue capacity="10"/>
	</int:channel>
	<int:service-activator input-channel="coldDrinks" ref="barista" method="prepareColdDrink" output-channel="preparedDrinks"/>

	<!-- individual order items are processed by the barista -->
	<int:channel id="hotDrinks">
		<int:queue capacity="10"/>
	</int:channel>
	<int:service-activator input-channel="hotDrinks" ref="barista" method="prepareHotDrink" output-channel="preparedDrinks"/>

	<!-- drink order items are aggregated in a call to the waiter -->
	<int:channel id="preparedDrinks"/>
	<int:aggregator input-channel="preparedDrinks"  method="prepareDelivery" output-channel="deliveries">
		<beans:bean class="org.springframework.integration.samples.cafe.xml.Waiter"/>
	</int:aggregator>

	<int-stream:stdout-channel-adapter id="deliveries"/>

	<beans:bean id="barista" class="org.springframework.integration.samples.cafe.xml.Barista"/>

	<int:poller id="poller" default="true" fixed-delay="1000"/>

</beans:beans>
